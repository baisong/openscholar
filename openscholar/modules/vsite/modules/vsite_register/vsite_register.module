<?php

/**
 * @file
 * Vsite Register module allows users to register new vsites.
 */

/**
 * Defines the menu path for the optional vsite welcome overlay message.
 */
define('VSITE_REGISTER_WELCOME_PATH', 'cp/welcome');

/**
 * Implements hook_menu().
 */
function vsite_register_menu() {
  $items['site/register'] = array(
    'title' => 'Create your web site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_form'),
    'access callback' => 'vsite_vsite_exists_access',
    'file' => 'vsite_register.form.inc',
  );

  $items['admin/config/openscholar/vsite_register'] = array(
    'title' => 'Vsite Register',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('vsite_register_admin_form'),
    'file' => 'vsite_register.admin.inc',
    'access arguments' => array('access administration pages'),
    //'type' => MENU_LOCAL_TASK,
  );

  $items[VSITE_REGISTER_WELCOME_PATH] = array(
    'title callback' => '_vsite_register_welcome_title',
    'page callback' => '_vsite_register_welcome_page',
    'access callback' => '_vsite_register_welcome_access',
    'access arguments' => array(),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_title() {
  $nid = variable_get('vsite_register_welcome_message');
  $node = node_load($nid);
  if (isset($node->title) && $node->title) {
    return $node->title;
  }
  // Default to "Welcome" if the title is empty.
  return t('Welcome');
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_page() {
  $nid = variable_get('vsite_register_welcome_message');
  $node = node_load($nid);
  $items = field_get_items('node', $node, 'body');
  $body = array_shift($items);
  // Optionally prepares a button "Okay" to dismiss the overlay.
  if (overlay_get_mode() == 'child') {
    $suffix = '<div class="vsite-welcome-okay"><a class="overlay-close os-blue-button" href="#">' . t('Okay') . '</a></div>';
  }
  if (isset($body['value'])) {
    // Only shows the "Okay" dismiss button if the page is viewed in overlay.
    return isset($suffix) ? $body['value'] . $suffix : $body['value'];
  }
  return '';
}

/**
 * Gets the node title from the welcome message node.
 */
function _vsite_register_welcome_access() {
  $nid = variable_get('vsite_register_welcome_message');
  return is_numeric($nid) && ($nid !== 0);
}

/**
 * Implements hook_block_info().
 */
function vsite_register_block_info() {
  return array(
    'get_your_site_block' => array('info' => t('Vsite Registration'), 'status' => 0),
  );
}

/**
 * Implements hook_block_view().
 */
function vsite_register_block_view($delta = '') {
  global $user;
  if (user_is_logged_in()) {
    $vsites = vsite_get_vsite_by_owner($user->uid);
  }
  $block = array();
  ctools_include('vsite', 'vsite');

  switch ($delta) {
    case 'get_your_site_block':
      if (vsite_vsite_exists_access()) {
        $content = l(t('Create your site'), 'site/register', array());
      }
      elseif (isset($vsites) && user_is_logged_in()) {
        if (count($vsites) > 1) {
          $content = l(t('Go to your sites'), 'user');
        }
        else {
          $content = l(t('Go to your site'), $vsites[0]->og->purl);
        }
      }
      break;
  }

  if (isset($content)) {
    $block['content'] = array(
      'content' => array('#markup' => $content),
    );
  }

  return $block;
}

/**
 * Implements hook_theme().
 *
 * Provides theming for form errors.
 */
function vsite_register_theme() {
  $theme = array();
  $theme['vsite_register_form_errors'] = array(
    'render element' => 'form',
    'function' => 'theme_vsite_register_form_errors',
    'variables' => array('name' => NULL, 'errors' => array()),
  );
  return $theme;
}

/**
 * Theme callback; returns a themed list of errors.
 *
 * @return string
 *   HTML container with a list of errors.
 */
function theme_vsite_register_form_errors($vars) {
  $list = theme('item_list', array('items' => $vars['errors'], 'type' => 'ul', 'attributes' => array('class' => array('error'))));
  return '<div id="' . $vars['name'] . '-errors">' . $list . '</div>';
}

/**
 * Generates the success message to display when vsite register form is submit.
 *
 * @return string $message
 *   The message shown to site owners after a successful web site registration.
 */
function vsite_register_message($form, $domain) {
  global $user, $base_url;

  // Checks if the current user is logged in.
  $user_is_anonymous = (bool) in_array('anonymous user', $user->roles);

  // Checks if the current user may create sites on other users' behalf.
  $may_create_on_behalf = (bool) user_access('create openscholar site on behalf of others');
  // Displays "the site" or "your site" depending on current users' permission.
  if ($may_create_on_behalf) {
    $whose_site = 'the';
  }
  else {
    $whose_site = 'your';
  }

  // Prepares the href attribute for the "Go there now" link.
  $href = "$base_url/$domain";
  // Checks if there is a welcome message node set to display
  // when the user clicks the "Go there now" link and visits their new site.
  $display_welcome = (bool) variable_get('vsite_register_welcome_message', FALSE);
  if ($display_welcome) {
    $fragment = 'overlay=' . VSITE_REGISTER_WELCOME_PATH;
    $href .= "#$fragment";
  }
  $link = l(t('Go there now &raquo;'), $href, array(
    'html' => TRUE,
    'attributes' => array(
      'title' => t('Visit your new site now'),
      'class' => array('os-green-button')
    )
  ));

  // Prepares an array of messages to display to the user,
  // to be rendered each as individual paragraph elements.
  $paragraphs = array();
  $paragraphs[] = t('Success! @whose new site has been created.', array('@whose' => ucfirst($whose)));
  if ($user_is_anonymous) {
    $paragraphs[] = t('Check your email account for further details on how to login in to start adding features and content.');
  }
  $paragraphs[] = t('The url of @whose site is @base_url/@domain '. $link, array('@whose' => $whose_site, '@base_url' => $base_url, '@domain' => $domain));

  // Prepares the build array for other modules to modify.
  $build = array(
    'container' => array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => 'success-message',
        'class' => array('status'),
      ),
      'message_text' => array(
        '#type' => 'markup',
        '#markup' => '<p>' . implode('</p><p>', $paragraphs) . '</p>',
      ),
    ),
  );

  // Gives other modules a chance to alter message
  module_invoke_all('vsite_register_message', $build, $form, $domain);
  $message = drupal_render($build);

  return $message;
}

/**
 * Implements hook_form_BASE_FORM_ID_alter() for vsite_register_form.
 *
 * Removes the notify element if the user is not logged in.
 */
function vsite_register_form_vsite_register_form_alter(&$form, &$form_state) {
  if (!user_is_logged_in()) {
    if (isset($form['notify'])) {
      $form['notify']['#access'] = FALSE;
    }
  }
}

/**
 * Gets the overlay path from a welcome message value like "Note title [id: 13]"
 */
function _vsite_register_get_overlay($welcome_message) {
  $nid = _vsite_register_welcome_message_nid($welcome_message);
  if (!$nid) {
    return FALSE;
  }

  return drupal_lookup_path('alias', "node/$nid");
}

/**
 * Implements hook_admin_paths().
 */
function vsite_register_admin_paths() {
  // Adds the welcome message node alias to admin paths to generate overlay.
  $paths = array(
    VSITE_REGISTER_WELCOME_PATH => TRUE,
  );

  return $paths;
}

/**
 * Adds an error message to the vsite register form.
 *
 * @see vsite_register_form_submit()
 */
function _vsite_register_form_error() {
  return ajax_command_html('#submit-suffix', 'The web site cannot be created. Please fix the errors and try again.');
}

