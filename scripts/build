#!/bin/bash
set -xe

# Drush executable.
[[ $DRUSH && ${DRUSH-x} ]] || DRUSH=drush

# Build base.
[[ $BUILD_ROOT && ${BUILD_ROOT-x} ]] || BUILD_ROOT="."

# Move to the top directory.
ROOT="$(dirname $0)/.."
cd $ROOT

# Chores.
(
  for DIR in $BUILD_ROOT/www-build sites-backup openscholar/1 openscholar/modules/contrib openscholar/themes/contrib openscholar/libraries; do
    rm -Rf $DIR
  done
)

# Build the profile itself.
(
  cd openscholar
  $DRUSH make --no-core --contrib-destination drupal-org.make .
  cd ..
)

# Build core and move the profile in place.
(
  # Build core.
  $DRUSH make openscholar/drupal-org-core.make $BUILD_ROOT/www-build

  # Check if sites/default exists, which means it is an existing installation.
  if [ -d $BUILD_ROOT/www/sites/default ]; then
    cp -rp $BUILD_ROOT/www/sites/default sites-backup
  fi

  # Restore the sites directory.
  if [ -d sites-backup ]; then
    rm -Rf $BUILD_ROOT/www-build/sites/default
    mv sites-backup/ $BUILD_ROOT/www-build/sites/default
  fi

  # Move the profile in place.
  ln -s ../../openscholar $BUILD_ROOT/www-build/profiles/openscholar

  # Fix permisions before deleting.
  chmod -R +w $BUILD_ROOT/www/sites/* || true
  rm -Rf $BUILD_ROOT/www || true

  # Restore updated site.
  mv $BUILD_ROOT/www-build $BUILD_ROOT/www
)

# Copy unmakable contrib files
(
  cp -R temporary/* openscholar/modules/contrib/
)

# Download the git wrapper library using the composer.
(
  cd openscholar
  curl -s https://getcomposer.org/installer | php
  php composer.phar install
)
